{
  "create_zeros_array": [
    {
      "input": [],
      "expected_output": "[[0. 0. 0.]\n [0. 0. 0.]\n [0. 0. 0.]]"
    }
  ],
  "create_scaled_identity_matrix": [
    {
      "input": [
        3,
        2.0
      ],
      "expected_output": "[[2. 0. 0.]\n [0. 2. 0.]\n [0. 0. 2.]]"
    },
    {
      "input": [
        1,
        1.0
      ],
      "expected_output": "[[1.]]"
    },
    {
      "input": [
        2,
        -1.0
      ],
      "expected_output": "[[-1. -0.]\n [-0. -1.]]"
    },
    {
      "input": [
        4,
        0.0
      ],
      "expected_output": "[[0. 0. 0. 0.]\n [0. 0. 0. 0.]\n [0. 0. 0. 0.]\n [0. 0. 0. 0.]]"
    }
  ],
  "create_range_matrix": [
    {
      "input": [],
      "expected_output": "[[ 0  1  2]\n [ 3  4  5]\n [ 6  7  8]\n [ 9 10 11]]"
    }
  ],
  "get_diagonal": [
    {
      "input": [
        "[[1 2 3]\n [4 5 6]\n [7 8 9]]"
      ],
      "expected_output": "[1 5 9]"
    },
    {
      "input": [
        "[[1 2]\n [3 4]]"
      ],
      "expected_output": "[1 4]"
    },
    {
      "input": [
        "[[5]]"
      ],
      "expected_output": "[5]"
    }
  ],
  "get_submatrix": [
    {
      "input": [
        "[[1 2 3]\n [4 5 6]\n [7 8 9]]",
        "slice(0, 2, None)",
        "slice(1, 3, None)"
      ],
      "expected_output": "[[2 3]\n [5 6]]"
    },
    {
      "input": [
        "[[1 2 3]\n [4 5 6]\n [7 8 9]]",
        "slice(1, 3, None)",
        "slice(0, 2, None)"
      ],
      "expected_output": "[[4 5]\n [7 8]]"
    },
    {
      "input": [
        "[[1 2 3 4]\n [5 6 7 8]]",
        "slice(0, 2, None)",
        "slice(1, 4, None)"
      ],
      "expected_output": "[[2 3 4]\n [6 7 8]]"
    }
  ],
  "matrix_plus_row_vector": [
    {
      "input": [
        "[[1 2 3]\n [4 5 6]\n [7 8 9]]",
        "[1 2 3]"
      ],
      "expected_output": "[[ 2  4  6]\n [ 5  7  9]\n [ 8 10 12]]"
    },
    {
      "input": [
        "[[1 2]\n [3 4]]",
        "[10 20]"
      ],
      "expected_output": "[[11 22]\n [13 24]]"
    }
  ],
  "matrix_plus_column_vector": [
    {
      "input": [
        "[[1 2 3]\n [4 5 6]\n [7 8 9]]",
        "[1 2 3]"
      ],
      "expected_output": "[[ 2  3  4]\n [ 6  7  8]\n [10 11 12]]"
    },
    {
      "input": [
        "[[1 2]\n [3 4]]",
        "[10 20]"
      ],
      "expected_output": "[[11 12]\n [23 24]]"
    }
  ],
  "conditional_values": [
    {
      "input": [
        "[[1 2 3]\n [4 5 6]\n [7 8 9]]",
        5
      ],
      "expected_output": "[[0 0 0]\n [0 0 6]\n [7 8 9]]"
    },
    {
      "input": [
        "[[1 2 3]\n [4 5 6]]",
        3.5
      ],
      "expected_output": "[[0 0 0]\n [4 5 6]]"
    },
    {
      "input": [
        "[[10 20]\n [30 40]]",
        25
      ],
      "expected_output": "[[ 0  0]\n [30 40]]"
    }
  ],
  "numpy_matrix_multiply": [
    {
      "input": [
        "[[1 2 3]\n [4 5 6]\n [7 8 9]]",
        "[[1 2 3]\n [4 5 6]\n [7 8 9]]"
      ],
      "expected_output": "[[ 30  36  42]\n [ 66  81  96]\n [102 126 150]]"
    },
    {
      "input": [
        "[[1 2]\n [3 4]]",
        "[[5 6]\n [7 8]]"
      ],
      "expected_output": "[[19 22]\n [43 50]]"
    },
    {
      "input": [
        "[[1 2 3]]",
        "[[1]\n [2]\n [3]]"
      ],
      "expected_output": "[[14]]"
    }
  ],
  "compute_row_means": [
    {
      "input": [
        "[[1 2 3]\n [4 5 6]\n [7 8 9]]"
      ],
      "expected_output": "[2. 5. 8.]"
    },
    {
      "input": [
        "[[1 2 3 4]\n [5 6 7 8]]"
      ],
      "expected_output": "[2.5 6.5]"
    },
    {
      "input": [
        "[[10]]"
      ],
      "expected_output": "[10.]"
    }
  ],
  "normalize_features": [
    {
      "input": [
        "[[1. 2. 3.]\n [4. 5. 6.]\n [7. 8. 9.]]"
      ],
      "expected_output": "[[-1.22474487 -1.22474487 -1.22474487]\n [ 0.          0.          0.        ]\n [ 1.22474487  1.22474487  1.22474487]]"
    },
    {
      "input": [
        "[[1. 2.]\n [3. 4.]]"
      ],
      "expected_output": "[[-1. -1.]\n [ 1.  1.]]"
    },
    {
      "input": [
        "[[10. 20. 30.]]"
      ],
      "expected_output": "[[nan nan nan]]"
    }
  ],
  "find_max_indices": [
    {
      "input": [
        "[1 2 3]"
      ],
      "expected_error": "axis 1 is out of bounds for array of dimension 1"
    },
    {
      "input": [
        "[1 3 2 5 4]"
      ],
      "expected_error": "axis 1 is out of bounds for array of dimension 1"
    },
    {
      "input": [
        "[10 10 10]"
      ],
      "expected_error": "axis 1 is out of bounds for array of dimension 1"
    }
  ],
  "stack_arrays": [
    {
      "input": [
        "[[1 2]\n [3 4]]",
        "[[5 6]\n [7 8]]"
      ],
      "expected_output": "[[1 2]\n [3 4]\n [5 6]\n [7 8]]"
    },
    {
      "input": [
        "[[1]]",
        "[[2]]"
      ],
      "expected_output": "[[1]\n [2]]"
    },
    {
      "input": [
        "[[1 2 3]]",
        "[[4 5 6]]"
      ],
      "expected_output": "[[1 2 3]\n [4 5 6]]"
    }
  ],
  "filter_positive_values": [
    {
      "input": [
        "[ 1 -2  3 -4  5]"
      ],
      "expected_output": "[1 3 5]"
    },
    {
      "input": [
        "[-1 -2 -3]"
      ],
      "expected_output": "[]"
    },
    {
      "input": [
        "[0 1 2]"
      ],
      "expected_output": "[1 2]"
    },
    {
      "input": [
        "[]"
      ],
      "expected_output": "[]"
    }
  ]
}